version: '3.5'

services:
    opentelemetry:
        image: otel/opentelemetry-collector
        container_name: opentelemetry
        command:
            ['--config=/etc/otel-collector-config.yaml']
        volumes:
            - ./local_docker/opentelemetry.yaml:/etc/otel-collector-config.yaml
        ports:
            - '1888:1888' # pprof extension
            - '8888:8888' # Prometheus metrics exposed by the collector
            - '8889:8889' # Prometheus exporter metrics
            - '13133:13133' # health_check extension
            - '4317:4317' # OTLP gRPC receiver  
            - '4318:4318' # OTLP http receiver  
            - '55670:55679' # zpages extension
            - '55681'

    jaeger:
        image: jaegertracing/all-in-one:latest
        container_name: jaeger
        ports:
            - '16686:16686'
            - '14268'
            - '14250'
        # environment:
        #     - JAEGER_REPORTER_MAX_QUEUE_SIZE=10000
    prometheus:
        image: prom/prometheus
        container_name: prometheus
        ports:
            - '9090:9090'
        volumes:
            - ./local_docker/prometheus.yaml:/etc/prometheus/prometheus.yml

    grafana:
        image: grafana/grafana
        container_name: grafana
        ports:
            - '3030:3000'
        volumes:
            - ./local_docker/grafana/provisioning/:/etc/grafana/provisioning/
            - ./local_docker/grafana/provisioning/dashboards/custom:/var/lib/grafana/dashboards
        depends_on:
          - prometheus
          - jaeger
        environment:
            - GF_AUTH_DISABLE_LOGIN_FORM=true
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
            - GF_USERS_ALLOW_SIGN_UP=false

    observable-app: 
        container_name: observable-app
        image: node:14.21.2-alpine3.17         
        ports: 
            - 9000:9000
        restart: unless-stopped
        depends_on:
          - opentelemetry
        working_dir: /app
        volumes: 
            - .:/app  
        command: 'npm run start:dev'
